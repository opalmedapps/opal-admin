DEBUG=True
# set host to localhost to support calling manage.py from local venv (and container)
# use IP to enforce TCP protocol for mysql client
DATABASE_HOST=127.0.0.1
DATABASE_USER=opal
DATABASE_PASSWORD=change-my-super-secret-password
DATABASE_NAME=opal
DATABASE_PORT=3306
# legacy DB settings
LEGACY_DATABASE_HOST=127.0.0.1
# This next value should match the username value from your db-docker setup.
LEGACY_DATABASE_USER=opal
LEGACY_DATABASE_PASSWORD=change-my-super-secret-password
LEGACY_DATABASE_PORT=3307
# SSL configurations for the database connection
# To use secure transport for the database connections (e.g., over SSL), set DATABASE_USE_SSL=True
# DATABASE_USE_SSL=True
# SSL_CA is the path to the CA's public certificate that was used to issue the DB server's certificate.
# It must be the same certificate that is used in the database-server SSL settings.
# See the db-docker repository README for the details on how to generate certificates and use encrypted connections.
# https://gitlab.com/opalmedapps/db-docker#running-the-databases-with-encrypted-connections
# SSL_CA=/app/certs/ca.pem
# generate secret key using
# python3 -c "import secrets; print(secrets.token_urlsafe())"
# see: https://humberto.io/blog/tldr-generate-django-secret-key/
SECRET_KEY=
# Uncomment and set this if not running locally
# ALLOWED_HOSTS="admin.opalmedapps.dev,opalmedapps.dev"
# CORS settings
CORS_ALLOWED_ORIGINS=http://localhost:8082,http://localhost:8086,http://127.0.0.1:8082,http://127.0.0.1:8086
CORS_ALLOW_CREDENTIALS=True
CSRF_TRUSTED_ORIGINS=http://localhost:8082,http://localhost:8086,http://127.0.0.1:8086,http://127.0.0.1:8000
# URL routes exempt from login
AUTH_EXEMPT_ROUTES=login,admin:login,admin:index,favicon.ico
# FedAuth web service API settings
FEDAUTH_API_ENDPOINT=https://fedauthfcp.rtss.qc.ca/fedauth/wsapi/login
FEDAUTH_INSTITUTION=06-ciusss-cusm
# Opal Admin backend url (no trailing slash)
OPAL_ADMIN_URL=http://localhost:8082
# Source System/Integration Engine
SOURCE_SYSTEM_HOST=https://172.26.125.233
SOURCE_SYSTEM_USER=questionnaire
SOURCE_SYSTEM_PASSWORD=12345Opal!!
# Email SMTP server
EMAIL_HOST=smtp.example.com
EMAIL_PORT=587
EMAIL_HOST_USER=example@muhc.mcgill.ca
EMAIL_HOST_PASSWORD=AuthorizationCode
# EPRO Data Extractions Tool - List of PatientIds to be excluded from Questionnaire reports
# (NOT the OpalDB.patient.PatientSerNum, this list is the QuestionnaireDB.patient.ID)
TEST_PATIENT_QUESTIONNAIREDB_IDS=3
# Opal User Registration URL
OPAL_USER_REGISTRATION_URL=https://registration.opalmedapps.ca
# Institution code for registration
INSTITUTION_CODE=A0
# Sending SMS message settings
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
SMS_FROM=
# Opal Room Management System (ORMS)
ORMS_ENABLED=True
# ORMS origin url (no slash at the end!)
ORMS_HOST=http://host.docker.internal:8086/orms
# Path to the pathology reports folder
# Make sure the specified folder exists on your machine, otherwise it will throw a FileNotFoundError
# For the local environment, use "/your-opal-project-path/tmp/pathology"
# or any other preferable folder
PATHOLOGY_REPORTS_PATH=/OpalDocuments/clinical/documents/

# Whether the QSCC Databank project is active or not
# Note: Assumes the OIE has been properly configured and has databank credentials in its environment
DATABANK_ENABLED=True

# Temporary environmement variable for the pdf generation
REPORT_SOURCE_SYSTEM=OPAL
REPORT_DOCUMENT_NUMBER=FMU-8624
