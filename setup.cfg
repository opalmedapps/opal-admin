[flake8]
format = wemake
show-source = true
statistics = false
doctests = true
enable-extensions = G

# darglint configuration:
# https://github.com/terrencepreilly/darglint
strictness = full
# docstring-style = numpy

max-line-length = 120
max-complexity = 6
max-module-members = 8

exclude =
    .tox,
    .git,
    .venv,
    __py_cache__,
    */static/CACHE/*,
    site,
    node_modules,
    manage.py
ignore=
    # ignore errors on mypy type comment (# type: ignore[attr-defined]):
    # see: https://github.com/PyCQA/pyflakes/issues/373
    F821,
    # ignore line-break before operator error (to report only line-break after)
    # see: https://gitlab.com/pycqa/flake8/-/issues/466
    W503,
    # ignore missing docstring in public package (__init__.py)
    D104,
    # Don't enforce docstring in public nested class
    D106,
    # ignore imperative mood for docstrings first sentence
    # D401,
    # allow local folder imports
    WPS300,
    # don't enforce mandatory base class (e.g., class Meta(object) instead of Meta)
    WPS306,
    # allow multiline conditions
    WPS337,
    # allow print (but also other blacklisted functions)
    WPS421,
# Docs: https://flake8.pycqa.org/en/latest/user/options.html?highlight=per-file-ignores#cmdoption-flake8-per-file-ignores
per-file-ignores=
    # Settings
    #
    # - Ignore overused string (WPS226)
    # - Ignore mutable constants (WPS407)
    **/settings.py: WPS226, WPS407
    # Migrations
    #
    # - Allow missing docstring in public module (D100)
    # - Ignore null=True on string-based fields (DJ01)
    # - Ignore line length errors for migrations to catch problems in migrations with custom code (E501)
    # - Ignore string overuse (WPS226)
    # - Ignore max line complexity aka high jones complexity (WPS221)
    # - Allow dotted raw imports and imports collisions (WPS301, WPS458)
    # - Allow implicit raw string (WPS342)
    # - Allow to have magic numbers inside migrations and wrong module names (WPS102, WPS114, WPS432)
    */migrations/*.py: D100, DJ01, E501, WPS102, WPS221, WPS226, WPS301, WPS114, WPS342, WPS432, WPS458
    # Tests
    #
    # - Allow missing docstring in public module (D100)
    # - Allow larger number of module members (WPS202)
    # - Ignore expression overuse (WPS204)
    # - Ignore overused string (WPS226)
    # - Allow calling private functions/methods to test them directly (WPS437)
    # - Enable `assert` keyword and magic numbers for tests (DAR101, S101, WPS432)
    */tests/*.py: D100, DAR101, S101, WPS202, WPS204, WPS226, WPS432, WPS437
    # Models
    #
    */models.py:
        # - Ignore wrong variable name to allow definition of objects (WPS110)
        WPS110,
        # - Allow upper-case constant names for enumeration types, i.e., TextChoices and IntegerChoices (WPS115)
        WPS115,
        # - Allow magic numbers for model field definition such as CharField.max_length (WPS432)
        WPS432,
        # - Ignore shadowed class attribute violation (WPS601)
        WPS601,
    # Views
    #
    # - Ignore too many classes/functions in a module (WPS202)
    # - Ignore string overuse (WPS226)
    */views.py: WPS202, WPS226


[isort]
known_django = django
known_firstparty = opal
sections = FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
line_length = 120
skip = .venv
skip_glob = */migrations/*.py
include_trailing_comma = true
use_parentheses = true
# vertical hanging
# See: https://github.com/PyCQA/isort#multi-line-output-modes
multi_line_output = 3

[pycodestyle]
max-line-length = 120
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules

[mypy]
python_version = 3.9
ignore_missing_imports = True
strict_equality = True
show_error_codes = True
warn_return_any = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
# warn_unreachable = True
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
disallow_untyped_decorators = True
check_untyped_defs = True
plugins = mypy_django_plugin.main, mypy_drf_plugin.main

[mypy.plugins.django-stubs]
django_settings_module = opal.settings

[mypy-*.migrations.*]
# Django migrations should not produce any errors:
# ignore_errors = False
# suppress error from initial migration, anything else should be reported due migrations with custom code
allow_untyped_globals = True

# Disabled to enforce type definitions in tests as well.
# This hopefully helps find test issues faster.
# [mypy-*.tests.*]
# # supress errors for tests about untyped defs
# disallow_untyped_defs = False
# disallow_untyped_decorators = False
# disallow_incomplete_defs = False

[coverage:run]
source = opal
; include = opal/*
omit =
    .*,
    *tests*,
    *migrations*,
    opal/wsgi.py,
    opal/asgi.py,
    # omit prod settings
    opal/settings_prod.py,
branch = True
plugins =
    django_coverage_plugin

[coverage:report]
fail_under = 90
show_missing = True
skip_empty = True
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
