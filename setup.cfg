# SPDX-FileCopyrightText: Copyright (C) 2021 Opal Health Informatics Group at the Research Institute of the McGill University Health Centre <john.kildea@mcgill.ca>
#
# SPDX-License-Identifier: AGPL-3.0-or-later

[mypy]
python_version = 3.12
ignore_missing_imports = True
strict_equality = True
show_error_codes = True
show_error_code_links = True
warn_return_any = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
warn_unreachable = True
# https://mypy.readthedocs.io/en/stable/command_line.html#cmdoption-mypy-disallow-any-generics
disallow_any_generics = True
# https://mypy.readthedocs.io/en/stable/command_line.html#cmdoption-mypy-disallow-untyped-calls
disallow_untyped_calls = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
disallow_untyped_decorators = True
check_untyped_defs = True
enable_error_code = redundant-expr,truthy-bool,ignore-without-code
plugins = mypy_django_plugin.main,mypy_drf_plugin.main,pydantic.mypy

[mypy.plugins.django-stubs]
django_settings_module = config.settings.test

[mypy-*.migrations.*]
# Django migrations should not produce any errors:
# ignore_errors = False
# suppress error from initial migration, anything else should be reported due migrations with custom code
allow_untyped_globals = True

[mypy-*.tests.*]
warn_unreachable = False
# Disabled to enforce type definitions in tests as well.
# This hopefully helps find test issues faster.
# supress errors for tests about untyped defs
# disallow_untyped_defs = False
# disallow_untyped_decorators = False
# disallow_incomplete_defs = False

[mypy-*.factories]
disallow_untyped_calls = False

[coverage:run]
source = opal
; include = opal/*
omit =
    .*,
    **/tests/*,
    # **/migrations/*,
    opal/wsgi.py,
    opal/asgi.py,
    # omit prod settings
    opal/settings_prod.py,
    # omit sidebar menu
    opal/templates/sidebar_menu.html,
    opal/templates/components/menu_group.html,
    opal/templates/components/menu_item.html
branch = True
plugins =
    django_coverage_plugin

[coverage:report]
fail_under = 100
precision = 2
show_missing = True
skip_empty = True
skip_covered = True
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't require coverage on TYPE_CHECKING imports
    if TYPE_CHECKING:

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
