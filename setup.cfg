[flake8]
max-line-length = 120
exclude =
    .tox,
    .git,
    .venv,
    __py_cache__,
    # */migrations/*,
    */static/CACHE/*,
    docs,
    node_modules,
    manage.py
ignore=
    # ignore errors on mypy type comment (# type: ignore[attr-defined]):
    # see: https://github.com/PyCQA/pyflakes/issues/373
    F821,
    # ignore line-break before operator error (to report only line-break after)
    # see: https://gitlab.com/pycqa/flake8/-/issues/466
    W503,
# ignore line length errors for migrations to catch problems in migrations with custom code
per-file-ignores=
    */migrations/*: E501

[isort]
known_django = django
sections = FUTURE,STDLIB,DJANGO,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
line_length = 120
skip_glob = */migrations/*.py

[pycodestyle]
max-line-length = 120
exclude = .tox,.git,*/migrations/*,*/static/CACHE/*,docs,node_modules

[mypy]
python_version = 3.8
check_untyped_defs = True
ignore_missing_imports = True
show_error_codes = True
warn_unused_ignores = True
warn_redundant_casts = True
warn_unused_configs = True
# warn_unreachable = True
plugins = mypy_django_plugin.main

[mypy.plugins.django-stubs]
django_settings_module = opal.settings

[mypy-*.migrations.*]
# Django migrations should not produce any errors:
# ignore_errors = False
# suppress error from initial migration, anything else should be reported due migrations with custom code
allow_untyped_globals = True

[coverage:run]
source = opal
; include = opal/*
omit =
    .*,
    *tests*,
    *migrations*,
    opal/wsgi.py,
    opal/asgi.py,
    # omit prod settings
    opal/settings_prod.py,
branch = True
plugins =
    django_coverage_plugin

[coverage:report]
fail_under = 90
show_missing = True
skip_empty = True
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
